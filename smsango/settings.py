"""
Django settings for smsango project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os, json
from decouple import config
from pathlib import Path

  
#import _mysql
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = Path(__file__).resolve().parent.parent

###Load .env if no does not display
# load_dotenv(os.path.join(BASE_DIR, '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

CSRF_TRUSTED_ORIGINS = ['portal.swiftconnect.com.ng','www.portal.swiftconnect.com.ng']

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'admin_interface',
    # 'flat_responsive', # only if django version < 2.0
    # 'flat', # only if django version < 1.9
    'colorfield',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django_watch',
    'smsangosend',
    'smsangonumcredit',
    # 'bootstrap5',
    'bootstrap4',
    'payments',
    # 'paystack',
    'rechargeapp',
    # 'rechargeapp.apps.RechargeappConfig',
    'impersonate',
    'django_crontab',
    'notificationapp',
    # 'ussdmobile',
    'coreconfig',
    'electricity',
    'voucher',
    'education',
    'other_data_services',
    'cryptocurrency',
    'monnify_app',
    'crude',
    'transactions',
    # 'debug_toolbar',
    ##API THINGS##
    'api',
    'rest_framework', #api changes
    'rest_framework.authtoken', #api changes
    'external_cron',
    #Third Party
    'mathfilters',
    'background_task',
] + json.loads(config("APP_ADDON"))

ADDON_URLS = list(config("APP_ADDON_URL"))

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.common.BrokenLinkEmailsMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
    'impersonate.middleware.ImpersonateMiddleware',
    # 'django_watch.middleware.CheckLiValueMiddleware',
    'smsango.middleware.OnlyOneUserMiddleware',
]

## X-Frame-Options
X_FRAME_OPTIONS = 'DENY'
#X-Content-Type-Options
SECURE_CONTENT_TYPE_NOSNIFF = True
## Strict-Transport-Security
SECURE_HSTS_SECONDS = 15768000
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

## that requests over HTTP are redirected to HTTPS. aslo can config in webserver
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# SECURE_SSL_REDSIRECT = True 

# for more security
#CACHE SETTINGS
TIMEOUT = 0
CSRF_COOKIE_AGE = 120
CSRF_COOKIE_SECURE = True
CSRF_USE_SESSIONS = True
CSRF_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = 'Strict'
SECURE_BROWSER_XSS_FILTER = True
SECURE_CROSS_ORIGIN_OPENER_POLICY = "same-origin"
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
CSRF_FAILURE_VIEW = "smsangosend.views.csrf_failure"

ROOT_URLCONF = 'smsango.urls'
SITE_ID = 1


TEMPLATES = [
    # 'admin_tools.template_loaders.Loader',
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ 
            'custom_templates', 
            os.path.join(BASE_DIR, 'custom_templates'),
            os.path.join(BASE_DIR, 'templates'),
            'templates'], #Your path to templates
        # 'APP_DIRS': True,
        'OPTIONS': {
            'loaders':[
                'apptemplates.Loader',
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ],
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'smsangosend.context_processors.Getlist_of_SMSPlan_Created',
                # 'smsangosend.context_processors.LoadContactPhoneNum',
            ],
        },
    },
]
WSGI_APPLICATION = 'smsango.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
#for mysql use 'ENGINE': 'django.db.backends.mysql',
#for psql use 'django.db.backends.postgresql'
# DATABASES = {
#     'default': {
#         'ENGINE': config('DB_ENGINE'),
#         'NAME': config('DB_NAME'),
#         'USER': config('DB_USER'),
#         'PASSWORD': config('DB_PASSWORD'),
#         'HOST': config('DB_HOST'),
#         'PORT': config('DB_PORT'),
#         'ATOMIC_REQUESTS': True,
#     }
# }


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / "db.sqlite3",
    }
}



# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Lagos'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
# MANAGERS = ADMINS
ADMIN_EMAIL_NOFITY = config('ADMIN_EMAIL_NOFITY')
THEME_CONTACT_EMAIL = config('THEME_CONTACT_EMAIL')
ADMINS = (('Admin', config('THEME_CONTACT_EMAIL')),)
MANAGERS = ADMINS
EMAIL_SUBJECT_PREFIX = ''
SEND_BROKEN_LINK_EMAILS=True
EMAIL_BACKEND = config('EMAIL_BACKEND')
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_PORT = config('EMAIL_PORT')
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')
EMAIL_USE_TLS = config('EMAIL_USE_TLS')
SERVER_EMAIL = config('SERVER_EMAIL')
DEFAULT_FROM_EMAIL = config('DEFAULT_FROM_EMAIL')
EMAIL_HOST = config('EMAIL_HOST')

#AUTHTENTICATION
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        },
    },
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
smsango_ROOT = os.path.dirname(os.path.abspath(__file__))

STATIC_URL = '/static/'
LOGIN_URL = config('LOGIN_URL')
LOGIN_REDIRECT_URL = config('LOGIN_REDIRECT_URL')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

MEDIA_URL = '/media/'

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')


STATICFILES_DIRS = (
    # os.path.join(smsango_ROOT, 'staticfiles'),
    os.path.join(BASE_DIR, 'static'),
)

#PAYSTACK SETTINGS
PAYSTACK_PUBLIC_KEY= config('PK_PAYSTACK')
PAYSTACK_SECRET_KEY=config('SK_PAYSTACK')

#VOUCHER
VOUCHER_PREFIX=config('VOUCHER_PREFIX')

##SESSION LOGOUT AFTER INACTIVITY
SESSION_COOKIE_AGE=int(config('SESSION_COOKIE_AGE'))
SESSION_ENGINE='django.contrib.sessions.backends.db'

#Prevent multiple clicks
TIME_IN_SECONDS_INTERVAL_TO_PREVENT_DOUBLE_RECHARGE=int(config('TIME_IN_SECONDS_INTERVAL_TO_PREVENT_DOUBLE_RECHARGE'))

#customer url changed
CUSTOMER_URL = config("CUSTOMER_URL")


#CELERY CONFIG
CELERY_BROKER_URL = 'amqp://localhost'
# CELERY_BROKER_URL = 'redis://redistogo:84d6afc0c48613176e8a6500bf3f6333@pike.redistogo.com:10918/'
# CELERY_RESULT_BACKEND = 'redis://redistogo:84d6afc0c48613176e8a6500bf3f6333@pike.redistogo.com:10918/'

IMPERSONATE = {
    'REDIRECT_URL': config('LOGIN_REDIRECT_URL'),
    'PAGINATE_COUNT': 10,
    'REQUIRE_SUPERUSER': True
}

##API THINGS
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.TokenAuthentication',
        # 'api.views.QueryStringBasedTokenAuthentication',
    ],
}

#Django backGround Task
MAX_ATTEMPTS = 1
MAX_RUN_TIME = 5000
BACKGROUND_TASK_RUN_ASYNC  = True
# BACKGROUND_TASK_ASYNC_THREADS - Specifies number of concurrent threads. Default is multiprocessing.cpu_count().
# BACKGROUND_TASK_PRIORITY_ORDERING 

#CRON JOBS
CRONJOBS = [
    ('*/5 * * * *', 'smsangosend.views.SchedulingSMS', '>> {}'.format(os.path.join(BASE_DIR, 'scheduled_job.log'))),
    # ('*/5 * * * *', 'myapp.cron.my_scheduled_job'),

    # format 1
    # ('0   0 * * *', 'myapp.cron.my_scheduled_job', '>> /tmp/scheduled_job.log'),

    # format 2
    # ('0   0 1 * *', 'myapp.cron.other_scheduled_job', ['myapp']),
    ('0   0 */5 * 0', 'django.core.management.call_command', ['dumpdata', 'auth.user'], {'indent': 4}, '> {}'.format(os.path.join(BASE_DIR, 'last_sunday_auth_backup.json'))),
    ('0   0 */10 * 0', 'django.core.management.call_command', ['dumpdata', '--exclude auth.permission'], {'indent': 4}, '> {}'.format(os.path.join(BASE_DIR, 'last_sunday_no_auth_backup.json'))),
]

#Specifically for django 3.2
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'


try:
    from .local_settings import *
except ImportError:
    pass
from django_watch import tests 